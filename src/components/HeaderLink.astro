---
import type { HTMLAttributes } from "astro/types";

type x = HTMLAttributes<"a">;

interface Props extends x {
  hijos?: string[];
}

const { hijos, href, class: className, ...props } = Astro.props;
const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, "");
let subpath = pathname.match(/[^\/]+/g);
const isHijo = hijos && subpath?.[0] && hijos.includes(subpath?.[0]);

const isActive =
  href === pathname || href === "/" + (subpath?.[0] || "") || isHijo;
---

<a href={href} class:list={[className, { active: isActive }]} {...props}>
  <slot />
</a>
<style>
  a {
    display: inline-block;
    text-decoration: none;
  }
  a.active {
    font-weight: bolder;
    text-decoration: underline;
  }
</style>
