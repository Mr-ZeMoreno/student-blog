---
import { getCollection, type DataEntryMap } from "astro:content";
import FormattedDate from "./FormattedDate.astro";

interface Props {
  coleccion?: keyof DataEntryMap;
  posts?: {
    id: string;
    data: {
      title: string;
      pubDate: string | Date;
      heroImage?: string;
    };
  }[];
}

let { coleccion, posts } = Astro.props;

if (coleccion) {
  posts = (await getCollection(coleccion)).sort(
    (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
  );

  posts = posts.filter((post) => !post.id.includes("index"));
}
---

{
  posts && posts.length > 0 && (
    <ul>
      {posts.map((post) => (
        <li>
          <a href={post.id}>
            <img width={720} height={360} src={post.data.heroImage} alt="" />
            <h4 class="title">{post.data.title}</h4>
            <p class="date">
              <FormattedDate date={post.data.pubDate} />
            </p>
          </a>
        </li>
      ))}
    </ul>
  )
}

{
  !posts && posts!.length === 0 && (
    <p>No posts available for this collection.</p>
  )
}

<style>
  ul {
    display: flex;
    flex-wrap: wrap;
    gap: 2rem;
    list-style-type: none;
    margin: 0;
    padding: 0;
  }
  ul li {
    width: calc(50% - 1rem);
  }
  ul li * {
    text-decoration: none;
    transition: 0.2s ease;
  }
  ul li img {
    margin-bottom: 0.5rem;
    border-radius: 12px;
  }
  ul li a {
    display: block;
  }
  .date {
    margin: 0;
    color: rgb(var(--gray));
  }

  @media (max-width: 720px) {
    ul {
      gap: 0.5em;
    }
    ul li {
      width: 100%;
      text-align: center;
    }
  }

  ul li a:hover h4,
  ul li a:hover .date {
    color: rgb(var(--accent));
  }
  ul a:hover img {
    box-shadow: var(--box-shadow);
  }
</style>
