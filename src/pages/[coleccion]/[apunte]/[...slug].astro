---
import { getCollection } from 'astro:content'
import { render } from 'astro:content'
import Avisos from '../../../components/Avisos.astro'
import { collections } from '../../../content/config'
import Layout from '../../../layouts/Layout.astro'
import FormattedDate from '../../../components/FormattedDate.astro'
import Title from '../../../components/Layout/Title.astro'
import Nav from '../../../components/Blog/Nav.astro'
import { pick } from '../../../lib/utils'

type CollectionKey = keyof typeof collections
type PostParams = {
  coleccion?: string
  apunte?: string
  slug?: string
}

const { coleccion, apunte, slug } = Astro.params as PostParams

if (!coleccion || !(coleccion in collections)) {
  return Astro.redirect('/404')
}

const posts = await getCollection(coleccion as CollectionKey)

const post = posts.find((post) => {
  const idParts = post.id.split('/')
  return idParts.length > 1 && idParts[0] === apunte && idParts[1] === slug
})

if (!post) {
  return Astro.redirect('/404')
}

const layoutData = pick(post.data, ['title', 'description', 'heroImage', 'isMath'])
const dateData = pick(post.data, ['pubDate', 'updatedDate'])
const navData = { ...(post.data.nav || {}), coleccion, apunte }
const { Content } = await render(post)
---

<Layout {...layoutData}>
  {post.data.construccion && <Avisos slot="avisos" />}

  <Title slot="title">
    <FormattedDate {...dateData} />
    {post.data.title}
  </Title>

  <Content />

  <Nav {...navData} slot="nav" />
</Layout>
